% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_design_custom_mc.R
\name{eval_design_custom_mc}
\alias{eval_design_custom_mc}
\title{Evaluates power for model matrix with a Monte Carlo simulation for a user supplied library}
\usage{
eval_design_custom_mc(RunMatrix, model, alpha, nsim, fitfunction, rfunction,
  pvalfunction, anticoef, delta = 2, conservative = FALSE,
  parallel = FALSE)
}
\arguments{
\item{RunMatrix}{The run matrix of the design.}

\item{model}{The model used in the evaluation.}

\item{alpha}{The type-I error.}

\item{nsim}{The number of simulations.}

\item{fitfunction}{Function from library used to evaluate fit. Should be of the form f(formula, X, contrasts)
where X is the model matrix. If contrasts do not need to be specified for the user supplied
library, that argument can be ignored.}

\item{rfunction}{Random number generator function. Should be a function of the form f(X,b), where X is the
model matrix and b are the anticipated coefficients.}

\item{pvalfunction}{Function that returns a vector of pvals from the object returned from the fitfunction.}

\item{anticoef}{The anticipated coefficients for calculating the power. If missing, coefficients will be
automatically generated.}

\item{delta}{The signal-to-noise ratio. Default 2. This specifies the difference between the high and low levels.
Anticipated coefficients will be half of this number.}

\item{conservative}{Default FALSE. Specifies whether default method for generating
anticipated coefficents should be conservative or not. TRUE will give the most conservative
estimate of power by setting all but one level in a categorical factor's anticipated coefficients
to zero.}

\item{parallel}{Default FALSE. If TRUE, uses all cores available to speed up computation of power.}
}
\value{
A data frame consisting of the parameters and their powers
}
\description{
Evaluates design given a model matrix with a monte carlo simulation and returns
a data frame of parameter powers. Currently only works with linear, non-interacting models.
}
\examples{
#We first generate a full factorial design using expand.grid:
}

