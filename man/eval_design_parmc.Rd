% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_design_parmc.R
\name{eval_design_parmc}
\alias{eval_design_parmc}
\title{Evaluates power for model matrix with a parallel Monte Carlo simulation.}
\usage{
eval_design_parmc(ModelMatrix, model, alpha, nsim, family, rfunction,
  rfunctionargs, rlistfuncs, skipintercept = FALSE)
}
\arguments{
\item{ModelMatrix}{Parameter (column) of the model matrix being evaluated}

\item{model}{The model used in the evaluation.}

\item{alpha}{The type-I error}

\item{nsim}{The number of simulations for the Monte Carlo simulation.}

\item{family}{String indicating the family the distribution is from for the glm function (e.g. binomial)}

\item{rfunction}{Random number generator function}

\item{rfunctionargs}{List of arguments to be passed to the rfunction function. The n parameter
is handled automatically.}

\item{rlistfuncs}{List of functions corresponding (in order) to the arguments listed in the rfunctionargs argument.
These functions take the column of the model matrix as an input, and output a vector of values used in generating
the random values in rfunction. For convenience, three helper functions are provided. returnzero (which returns a
vector of zeros of the correct length), returnone (which returns of vector of ones of the correct length), and
returncol (which returns the column as is). Examples of the use of these functions and custom functions are provided below.}
}
\value{
A data frame consisting of the parameters and their powers
}
\description{
Evaluates design given a model matrix with a parallel Monte Carlo simulation and returns
a data frame of parameter powers. Usage is identical to eval_design_mc.
See \code{\link{eval_design_mc}} for full documentation and examples on usage.
}
\examples{
#See documentation for eval_design_mc. This is just a parallel wrapper around that function.
#If large number of designs are being evaluated, it might be advisable to parallelize the outer loop and
#use eval_design_mc rather than eval_design_parmc.
}

